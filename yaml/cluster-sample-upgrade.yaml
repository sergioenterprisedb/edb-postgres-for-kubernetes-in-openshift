apiVersion: postgresql.k8s.enterprisedb.io/v1
kind: Cluster
metadata:
  name: $cluster_name
spec:
  instances: $postgres_instances
  logLevel: info
  imageName: "$postgres_upgrade_image"
  #minSyncReplicas: 1
  #maxSyncReplicas: 1
  enableSuperuserAccess: true

  replicationSlots:
    highAvailability:
      enabled: true

  postgresql:

    synchronous:
      method: any
      number: 1
      # preferred: Focuses on self-healing and high availability by automatically 
      # disabling synchronous replication when no replicas are available in the cluster.
      dataDurability: preferred

    parameters:
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all

  storage:
    size: $postgres_storage

  walStorage:
    resizeInUseVolumes: true
    size: $postgres_wal_storage

  monitoring:
    enablePodMonitor: true

  resources:
    #requests:
    #  memory: "512Mi"
    #  cpu: "1"
    limits:
      memory: "$postgres_memory"
      cpu: "$postgres_cpu"
  
  backup:
    #target: "prefer-standby"
    barmanObjectStore:
      destinationPath: "$s3_destination_path"
      s3Credentials: $s3_endpoint_url
        accessKeyId:
          name: minio-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: minio-creds
          key: ACCESS_SECRET_KEY
        sessionToken:
          name: minio-creds
          key: ACCESS_SESSION_TOKEN
      data:
        immediateCheckpoint: true
      wal:
        compression: gzip
        maxParallel: 8
        encryption: AES256
    retentionPolicy: "1d"

  managed:
    services:
      #disabledDefaultServices: ["ro", "r"]
      additional:
      - selectorType: rw
        serviceTemplate:
          metadata:
            name: cluster-sample-rw-lb
          spec:
            type: LoadBalancer

